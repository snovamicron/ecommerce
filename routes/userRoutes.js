const express = require('express')
const { registerUser, loginUser, logout, forgotPassword, resetPassword, getUserDetails, updateUserPassword, updateProfile, fetchAllUserDetails, fetchOneUserDetails, updateUserRole, deleteUser } = require('../controller/userController')
const authJwtToken = require('../middleware/authJwtToken')
const authenticateRoles = require('../middleware/authAccessRoles')
const router = express.Router()
router.route('/register').post(registerUser)
router.route('/user/login').post(loginUser)
router.route('/user/logout').get(logout)
router.route('/user/password/forgot').post(forgotPassword)
router.route("/user/password/reset/:token?").put(resetPassword)
router.route('/user/me').get(authJwtToken, authenticateRoles('user', 'admin'),getUserDetails)
router.route('/user/update/password').put(authJwtToken, authenticateRoles('user', 'admin'), updateUserPassword)
router.route("/user/update/profile").put(authJwtToken,authenticateRoles('user', 'admin'),updateProfile)
router.route('/admin/details/users').get(authJwtToken,authenticateRoles('admin'),fetchAllUserDetails)
router.route('/admin/control/:userId?').get(authJwtToken,authenticateRoles("admin"),fetchOneUserDetails).put(authJwtToken,authenticateRoles("admin"), updateUserRole).delete(authJwtToken,authenticateRoles("admin"), deleteUser)
module.exports = router